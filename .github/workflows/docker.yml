name: ci/gh-actions/depends

on: [push, pull_request]

jobs:
  build-cross:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - name: "build-depends-armv7"
            host: "arm-linux-gnueabihf"
            packages: "python3 gperf g++-arm-linux-gnueabihf"
          - name: "build-depends-armv8"
            host: "aarch64-linux-gnu"
            packages: "python3 gperf g++-aarch64-linux-gnu"
          - name: "build-depends-armv8 RPi"
            host: "aarch64-linux-gnu"
            packages: "python3 gperf g++-aarch64-linux-gnu"
            cmake_opts: "-DNO_AES=ON"
          - name: "build-depends-i686-linux"
            host: "i686-pc-linux-gnu"
            packages: "gperf cmake g++-multilib python3-zmq"
          - name: "build-depends-windows-x64"
            host: "x86_64-w64-mingw32"
            packages: "cmake python3 g++-mingw-w64-x86-64 qttools5-dev-tools"
          - name: "build-depends-x86_64-linux"
            host: "x86_64-unknown-linux-gnu"
            packages: "gperf cmake python3-zmq libdbus-1-dev libharfbuzz-dev"
    container:
      image: ghcr.io/arqma/arqma/build-env:20.04
      env:
        DEBIAN_FRONTEND: noninteractive
        CCACHE_TEMPDIR: /tmp/.ccache-temp
    name: ${{ matrix.toolchain.name }}
    steps:
      - name: Set APT retry conf
        run: |
          tee -a /etc/apt/apt.conf.d/80-custom <<EOF
          Acquire::Retries "3";
          Acquire::http::Timeout "120";
          Acquire::ftp::Timeout "120";
          EOF

      - name: Install cross dependencies
        run: |
          apt update && apt install -y ${{ matrix.toolchain.packages }}

      - name: Configure Git
        run: git config --global --add safe.directory '*'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ matrix.toolchain.host }}-${{ github.sha }}
          restore-keys: ccache-${{ matrix.toolchain.host }}-

      - name: Cache depends
        uses: actions/cache@v4
        with:
          path: contrib/depends/built
          key: depends-${{ matrix.toolchain.host }}-${{ hashFiles('contrib/depends/packages/*') }}
          restore-keys: |
            depends-${{ matrix.toolchain.host }}-${{ hashFiles('contrib/depends/packages/*') }}
            depends-${{ matrix.toolchain.host }}-

      - name: Prepare mingw alternatives
        if: ${{ matrix.toolchain.host == 'x86_64-w64-mingw32' }}
        run: |
          update-alternatives --set x86_64-w64-mingw32-g++ $(which x86_64-w64-mingw32-g++-posix)
          update-alternatives --set x86_64-w64-mingw32-gcc $(which x86_64-w64-mingw32-gcc-posix)

      - uses: ./.github/actions/set-make-job-count

      - name: Build depends
        run: |
          ccache --max-size=150M
          ccache --set-config=compression=true
          export CFLAGS="-O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0"
          export CXXFLAGS="-O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0"
          make depends target=${{ matrix.toolchain.host }} cmake_opts="${{ matrix.toolchain.cmake_opts }}" -j${{ env.MAKE_JOB_COUNT }}

      - uses: actions/upload-artifact@v4
        if: ${{ matrix.toolchain.host == 'x86_64-w64-mingw32' || matrix.toolchain.host == 'x86_64-unknown-linux-gnu' || matrix.toolchain.host == 'aarch64-linux-gnu' || matrix.toolchain.host == 'arm-linux-gnueabihf' }}
        with:
          name: ${{ matrix.toolchain.name }}
          path: |
            /home/runner/work/arqma/arqma/build/${{ matrix.toolchain.host }}/release/bin/arqma*
