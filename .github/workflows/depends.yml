name: ci/gh-actions/depends

on: [push, pull_request]

env:
  APT_SET_CONF: |
    tee -a /etc/apt/apt.conf.d/80-custom << EOF
    Acquire::Retries "3";
    Acquire::http::Timeout "120";
    Acquire::ftp::Timeout "120";
    EOF
  CCACHE_SETTINGS: |
    ccache --max-size=150M
    ccache --set-config=compression=true

jobs:
  build-cross:
    runs-on: self-hosted
    container:
      image: ubuntu:20.04
      env:
        DEBIAN_FRONTEND: noninteractive
        CCACHE_TEMPDIR: /tmp/.ccache-temp
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - name: "build-depends-armv8"
            host: "aarch64-linux-gnu"
            packages: "g++-aarch64-linux-gnu"
          - name: "build-depends-armv8 RPi"
            host: "aarch64-linux-gnu"
            packages: "g++-aarch64-linux-gnu"
            cmake_opts: "-DNO_AES=ON"
          - name: "build-depends-windows-x64"
            host: "x86_64-w64-mingw32"
            packages: "g++-mingw-w64-x86-64"
          - name: "build-depends-x86_64-linux"
            host: "x86_64-unknown-linux-gnu"
          - name: "build-depends-macOS-x64"
            host: "x86_64-apple-darwin"
            packages: "clang"
          - name: "build-depends-macOS-arm64"
            host: "arm64-apple-darwin"
            packages: "clang"
    name: ${{ matrix.toolchain.name }}
    steps:
      - name: set apt conf
        run: ${{ env.APT_SET_CONF }}
      - name: install dependencies
        run: apt update; apt -y install build-essential libtool cmake autotools-dev automake pkg-config python3 gperf bsdmainutils curl git ca-certificates unzip ccache ${{ matrix.toolchain.packages }}
      - name: configure git
        run: git config --global --add safe.directory '*'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ matrix.toolchain.host }}-${{ github.sha }}
          restore-keys: ccache-${{ matrix.toolchain.host }}-
      - name: depends cache
        uses: actions/cache@v4
        with:
          path: contrib/depends/built
          key: depends-${{ matrix.toolchain.host }}-${{ hashFiles('contrib/depends/packages/*') }}
          restore-keys: |
            depends-${{ matrix.toolchain.host }}-${{ hashFiles('contrib/depends/packages/*') }}
            depends-${{ matrix.toolchain.host }}-
      - name: prepare w64-mingw32
        if: ${{ matrix.toolchain.host == 'x86_64-w64-mingw32' }}
        run: |
          update-alternatives --set ${{ matrix.toolchain.host }}-g++ $(which ${{ matrix.toolchain.host }}-g++-posix)
          update-alternatives --set ${{ matrix.toolchain.host }}-gcc $(which ${{ matrix.toolchain.host }}-gcc-posix)
      - uses: ./.github/actions/set-make-job-count
      - name: build
        run: |
          ${{ env.CCACHE_SETTINGS }}
          make depends target=${{ matrix.toolchain.host }} -j${{ env.MAKE_JOB_COUNT }}
      - uses: actions/upload-artifact@v4
        if: ${{ contains(fromJson('["x86_64-w64-mingw32","x86_64-apple-darwin","arm64-apple-darwin","x86_64-unknown-linux-gnu","aarch64-linux-gnu"]'), matrix.toolchain.host) }}
        with:
          name: ${{ matrix.toolchain.name }}
          path: |
            build/${{ matrix.toolchain.host }}/release/bin/arqma*
      - name: Copy files via ssh
        uses: appleboy/scp-action@v0.1.7
        if: ${{ contains(fromJson('["x86_64-w64-mingw32","x86_64-apple-darwin","arm64-apple-darwin","x86_64-unknown-linux-gnu","aarch64-linux-gnu"]'), matrix.toolchain.host) }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          source: build/${{ matrix.toolchain.host }}/release/bin/arqma*
          target: downloads/CLI
