name: ci/gh-actions/depends

on: [push, pull_request]

jobs:
  build-depends:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - name: "build-depends-armv8"
            host: "aarch64-linux-gnu"
            packages: "python3 gperf g++-aarch64-linux-gnu"
          - name: "build-depends-armv8 RPi"
            host: "aarch64-linux-gnu"
            packages: "python3 gperf g++-aarch64-linux-gnu"
            cmake_opts: "-DNO_AES=ON"
          - name: "build-depends-windows-x64"
            host: "x86_64-w64-mingw32"
            packages: "cmake python3 g++-mingw-w64-x86-64 qttools5-dev-tools"
          - name: "build-depends-x86_64-linux"
            host: "x86_64-unknown-linux-gnu"
            packages: "gperf cmake python3-zmq libdbus-1-dev libharfbuzz-dev"
          - name: "build-depends-macOS-x64"
            host: "x86_64-apple-darwin"
            packages: "cmake ccache imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools libtinfo6 curl bsdmainutils python3-dev python3-setuptools"
          - name: "build-depends-macOS-arm64"
            host: "aarch64-apple-darwin"
            packages: "cmake ccache imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools libtinfo6 curl bsdmainutils python3-dev python3-setuptools"
    name: ${{ matrix.toolchain.name }}
    env:
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup apt retries and timeouts
      run: |
        echo 'Acquire::Retries "3";' | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo 'Acquire::http::Timeout "120";' | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo 'Acquire::ftp::Timeout "120";' | sudo tee -a /etc/apt/apt.conf.d/80-custom

    - name: ccache cache
      uses: actions/cache@v4
      with:
        path: ~/.ccache
        key: ccache-${{ matrix.toolchain.host }}-${{ github.sha }}
        restore-keys: |
          ccache-${{ matrix.toolchain.host }}-

    - name: depends cache
      uses: actions/cache@v4
      with:
        path: contrib/depends/built
        key: depends-${{ matrix.toolchain.host }}-${{ hashFiles('contrib/depends/packages/*') }}
        restore-keys: |
          depends-${{ matrix.toolchain.host }}-${{ hashFiles('contrib/depends/packages/*') }}
          depends-${{ matrix.toolchain.host }}-

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt -y install build-essential libtool cmake autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache ${{ matrix.toolchain.packages }}

    - name: Fix libtinfo5 for clang in depends (symlink hack)
      run: |
        # Fix for libtinfo5 missing on Ubuntu 22.04+ (used by clang in depends toolchain)
        if [ ! -f /usr/lib/x86_64-linux-gnu/libtinfo.so.5 ] && [ -f /lib/x86_64-linux-gnu/libtinfo.so.6 ]; then
          sudo ln -s /lib/x86_64-linux-gnu/libtinfo.so.6 /usr/lib/x86_64-linux-gnu/libtinfo.so.5
        fi

    - name: ccache config
      run: |
        ccache --max-size=150M
        ccache --set-config=compression=true

    - name: prepare w64-mingw32
      if: ${{ matrix.toolchain.host == 'x86_64-w64-mingw32' }}
      run: |
        sudo update-alternatives --set x86_64-w64-mingw32-g++ $(which x86_64-w64-mingw32-g++-posix)
        sudo update-alternatives --set x86_64-w64-mingw32-gcc $(which x86_64-w64-mingw32-gcc-posix)

    - name: Build
      run: |
        make depends target=${{ matrix.toolchain.host }} cmake_opts="${{ matrix.toolchain.cmake_opts || '' }}"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.toolchain.name }}
        path: |
          ${{ github.workspace }}/build/${{ matrix.toolchain.host }}/release/bin/arqma*
