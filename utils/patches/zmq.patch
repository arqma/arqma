--- configure.ac      2019-07-08 16:19:27.000000000 +0000
+++ configure.ac      2020-06-18 09:20:42.875166670 +0000
@@ -935,11 +935,6 @@ AC_ARG_WITH([pkgconfigdir],
     [pkgconfigdir='${libdir}/pkgconfig'])
 AC_SUBST([pkgconfigdir])

-AC_CONFIG_FILES([ \
-    Makefile \
-    src/libzmq.pc \
-    doc/Makefile \
-    builds/Makefile \
-    builds/deprecated-msvc/Makefile])
+AC_CONFIG_FILES([Makefile src/libzmq.pc doc/Makefile builds/Makefile builds/deprecated-msvc/Makefile])

 AC_OUTPUT

--- src/thread.cpp	2019-07-08 16:19:27.000000000 +0000
+++ src/thread.cpp	2020-06-18 09:20:42.875166670 +0000
@@ -32,6 +32,10 @@
 #include "thread.hpp"
 #include "err.hpp"
 
+#ifdef ZMQ_HAVE_WINDOWS
+#include <winnt.h>
+#endif
+
 bool zmq::thread_t::get_started () const
 {
     return _started;
@@ -113,10 +117,27 @@
 #pragma pack(pop)
 }
 
+struct MY_EXCEPTION_REGISTRATION_RECORD
+{
+    typedef EXCEPTION_DISPOSITION (NTAPI *HandlerFunctionType) (
+      EXCEPTION_RECORD *, void *, CONTEXT *, void *);
+
+    MY_EXCEPTION_REGISTRATION_RECORD *Next;
+    HandlerFunctionType Handler;
+};
+
+static EXCEPTION_DISPOSITION NTAPI continue_execution (EXCEPTION_RECORD *rec,
+                                                       void *frame,
+                                                       CONTEXT *ctx,
+                                                       void *disp)
+{
+    return ExceptionContinueExecution;
+}
+
 void zmq::thread_t::
   applyThreadName () // to be called in secondary thread context
 {
-    if (!_name[0])
+    if (!_name[0] || !IsDebuggerPresent ())
         return;
 
     thread_info_t thread_info;
@@ -125,17 +146,21 @@
     thread_info._thread_id = -1;
     thread_info._flags = 0;
 
-#pragma warning(push)
-#pragma warning(disable : 6320 6322)
-    __try {
-        DWORD MS_VC_EXCEPTION = 0x406D1388;
-        RaiseException (MS_VC_EXCEPTION, 0,
-                        sizeof (thread_info) / sizeof (ULONG_PTR),
-                        (ULONG_PTR *) &thread_info);
-    }
-    __except (EXCEPTION_CONTINUE_EXECUTION) {
-    }
-#pragma warning(pop)
+    NT_TIB *tib = ((NT_TIB *) NtCurrentTeb ());
+
+    MY_EXCEPTION_REGISTRATION_RECORD rec;
+    rec.Next = (MY_EXCEPTION_REGISTRATION_RECORD *) tib->ExceptionList;
+    rec.Handler = continue_execution;
+
+    // push our handler, raise, and finally pop our handler
+    tib->ExceptionList = (_EXCEPTION_REGISTRATION_RECORD *) &rec;
+    DWORD MS_VC_EXCEPTION = 0x406D1388;
+    RaiseException (MS_VC_EXCEPTION, 0,
+                    sizeof (thread_info) / sizeof (ULONG_PTR),
+                    (ULONG_PTR *) &thread_info);
+    tib->ExceptionList =
+      (_EXCEPTION_REGISTRATION_RECORD
+         *) (((MY_EXCEPTION_REGISTRATION_RECORD *) tib->ExceptionList)->Next);
 }
 
 #elif defined ZMQ_HAVE_VXWORKS
